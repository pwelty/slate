# Trilium Widget Definition
# ========================

extends: "widget"  # Inherit from base widget template

metadata:
  type: "api"
  description: "Display recent notes from Trilium Notes"
  version: "1.0.0"
  author: "Slate Dashboard"

# Widget-specific schema (will be merged with base schema)
schema:
  baseUrl:
    type: "string"
    required: true
    description: "Base URL for your Trilium instance (e.g., https://trilium.example.com)"
  
  apiToken:
    type: "string"
    required: true
    description: "Trilium API token for authentication"
  
  limit:
    type: "integer"
    required: false
    default: 5
    min: 1
    max: 20
    description: "Number of recent notes to display"

# Widget capabilities (will be merged with base capabilities)
capabilities:
  realTimeUpdates: true
  userInteraction: true
  apiIntegration: true
  caching: true

# Server-side data fetcher configuration  
dataFetcher:
  type: "api"
  method: "GET"
  urlTemplate: "{baseUrl}/etapi/notes?search=*&limit={limit}&orderBy=dateModified&orderDirection=desc"
  headers:
    Authorization: "{apiToken}"
    Content-Type: "application/json"
  responseMapping:
    items: "results"
    fields:
      noteId: "noteId"
      title: "title" 
      dateModified: "dateModified"
      type: "type"
      mime: "mime"

# Widget body content (will be inserted into base template)
widget-body: |
  {% if items %}
    <div class="trilium-notes">
      {% for item in items %}
        <div class="note-item" onclick="window.open('{{baseUrl}}', '_blank', 'noopener,noreferrer')" title="Open Trilium - Search for: {{item.title}}">
          <div class="note-title">{{item.title or 'Untitled Note'}}</div>
          <div class="note-meta">
            <span class="note-type">{{item.type or 'text'}}</span>
            {% if item.dateModified %}
              <span class="note-date">{{item.dateModified[:10]}}</span>
            {% endif %}
          </div>
        </div>
      {% endfor %}
    </div>
  {% else %}
    <div class="widget-error">
      <div class="error-icon">üìù</div>
      <span class="error-message">No notes found</span>
    </div>
  {% endif %}

# Widget-specific CSS (base styles are in widget.css)
css: |
  .trilium-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 2rem;
    color: var(--text-secondary, #cccccc);
    font-size: 0.9rem;
  }
  
  .loading-spinner {
    width: 16px;
    height: 16px;
    border: 2px solid var(--bg-tertiary, rgba(255, 255, 255, 0.1));
    border-top: 2px solid var(--accent, #3b82f6);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
  
  .trilium-notes {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    max-height: 300px;
    overflow-y: auto;
  }
  
  .note-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    padding: 0 0.75rem .075rem 0.75rem;
    background: var(--bg-tertiary, rgba(255, 255, 255, 0.05));
    border-radius: var(--radius, 6px);
    border: 1px solid transparent;
    transition: all 0.2s ease;
    cursor: pointer;
  }
  
  .note-item:hover {
    background: var(--bg-secondary, rgba(255, 255, 255, 0.1));
    border-color: var(--accent, #3b82f6);
    transform: translateY(-1px);
  }
  
  .note-title {
    font-weight: var(--font-weight-medium, 500);
    color: var(--text-primary, #ffffff);
    font-size: 0.9rem;
    line-height: 1.3;
    margin-bottom: 0.25rem;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .note-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.7rem;
    color: var(--text-secondary, #cccccc);
    opacity: 0.6;
    margin-top: 0.25rem;
  }
  
  .note-type {
    background: var(--accent, #3b82f6);
    color: white;
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.6rem;
    font-weight: var(--font-weight-medium, 500);
    text-transform: uppercase;
  }
  
  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

# Widget-specific JavaScript  
js: |
  // Trilium widget - for client-side functionality if needed
  function initTriliumWidget(element, config) {
    console.log('Trilium widget initialized with server-side data');
  }
  
  // Function to open Trilium note with fallback search
  function openTriliumNote(baseUrl, noteId, title) {
    // Try simple noteId first, then fallback to search if that doesn't work
    const noteWindow = window.open(baseUrl + '/#' + noteId, '_blank', 'noopener,noreferrer');
    
    // Add a small delay to check if the window was created successfully
    setTimeout(() => {
      try {
        // If we can access the window location and it looks like it didn't navigate correctly,
        // try the search approach instead
        if (noteWindow && noteWindow.location.hash === '') {
          noteWindow.location.hash = '#search/' + encodeURIComponent(title);
        }
      } catch (e) {
        // Cross-origin error is expected, just ignore
        console.log('Trilium note opened:', title);
      }
    }, 500);
  }